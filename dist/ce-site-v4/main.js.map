{"version":3,"sources":["webpack:///./src/$_lazy_route_resource lazy namespace object","webpack:///./src/app/app.component.html","webpack:///./src/app/app.component.scss","webpack:///./src/app/app.component.ts","webpack:///./src/app/app.module.ts","webpack:///./src/app/components/about/about.ts","webpack:///./src/app/components/common/card/card.style.scss","webpack:///./src/app/components/common/card/card.template.html","webpack:///./src/app/components/common/card/card.ts","webpack:///./src/app/components/common/circle-image/circleImage.style.scss","webpack:///./src/app/components/common/circle-image/circleImage.template.html","webpack:///./src/app/components/common/circle-image/circleImage.ts","webpack:///./src/app/components/common/contact-list/contactList.style.scss","webpack:///./src/app/components/common/contact-list/contactList.template.html","webpack:///./src/app/components/common/contact-list/contactList.ts","webpack:///./src/app/components/home/home.style.scss","webpack:///./src/app/components/home/home.template.html","webpack:///./src/app/components/home/home.ts","webpack:///./src/app/config/config.ts","webpack:///./src/app/services/configuration/configuration.service.ts","webpack:///./src/app/services/language/language.service.ts","webpack:///./src/environments/environment.ts","webpack:///./src/main.ts"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error('Cannot find module \"' + req + '\".');\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./src/$$_lazy_route_resource lazy recursive\";","module.exports = \"<main *ngIf=\\\"lang.contents\\\">\\n  <home></home>\\n</main>\\n<footer *ngIf=\\\"copyright[0]\\\">\\n  {{copyright[0].content}}\\n</footer>\"","module.exports = \"/*\\r\\n * App-wide Color\\r\\n */\\n/*\\r\\n * Font Sizes\\r\\n */\\n/*\\r\\n * Font Face\\r\\n */\\nh1, h2, h3, h4, h5, h6 {\\n  font-family: \\\"Open Sans\\\", Arial, Tahoma;\\n  font-weight: 500;\\n  line-height: 1.1;\\n  color: inherit; }\\na {\\n  color: #000; }\\n.row {\\n  margin-left: 0 !important;\\n  margin-right: 0 !important; }\\n:host {\\n  display: flex;\\n  flex-direction: column;\\n  height: 100vh; }\\nheader {\\n  background-color: #4E274C;\\n  padding: 16px;\\n  position: fixed;\\n  z-index: 1;\\n  top: 0;\\n  left: 0;\\n  width: 100%;\\n  box-shadow: 2px 2px 6px rgba(0, 0, 0, 0.5); }\\nmain {\\n  padding: 0;\\n  font-family: \\\"Open Sans\\\", Arial, Tahoma;\\n  text-align: center;\\n  margin-top: 75px;\\n  flex: 1 0 auto; }\\nfooter {\\n  text-align: center;\\n  font-size: 10px;\\n  background-color: #ededed;\\n  font-family: \\\"Open Sans\\\", Arial, Tahoma; }\\n.shield {\\n  width: 750px;\\n  height: 450px; }\\n\"","/// src/app/index.ts\nimport {Component} from '@angular/core';\nimport {Configuration} from 'services/configuration/configuration.service';\nimport {Language} from 'services/language/language.service';\n\n/*\n * App Component\n * Top Level Component\n */\n@Component({\n    selector: 'app', // <app></app>\n    styleUrls: ['./app.component.scss'],\n    templateUrl: './app.component.html'\n})\n\nexport class AppComponent {\n    public lang: object = {};\n    public copyright: object = {};\n    private copyrightText: string = 'copyright';\n\n    constructor(private intLang: Language, private configuration: Configuration) {\n\n        this.configuration.getConfig()\n            .then((config) => {\n                this.intLang.geti18nFile(config)\n                    .then((lang) => {\n                        this.lang = lang;\n                        this.copyright = this.intLang.getSectionContent(this.copyrightText);\n                    });\n            });\n    }\n}","import 'hammerjs';\n\nimport { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { HttpModule } from '@angular/http';\nimport { RouterModule } from '@angular/router';\nimport { Location } from '@angular/common';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport { AngularFontAwesomeModule } from 'angular-font-awesome';\n\nimport { AppComponent } from './app.component';\nimport { Language } from './services/language/language.service';\nimport { Configuration } from './services/configuration/configuration.service';\nimport { Config } from './config/config';\nimport { Home } from './components/home/home';\nimport { About } from './components/about/about';\nimport { Card } from './components/common/card/card';\nimport { CircleImage } from './components/common/circle-image/circleImage';\nimport { ContactList } from './components/common/contact-list/contactList';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    Home,\n    About,\n    Card,\n    CircleImage,\n    ContactList\n  ],\n  imports: [\n    BrowserModule,\n    HttpModule,\n    RouterModule.forRoot([]),\n    BrowserAnimationsModule,\n    AngularFontAwesomeModule\n  ],\n  providers: [Language, Configuration, Location, Config],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import {Component} from '@angular/core';\nimport {Language} from 'services/language/language.service';\n\n@Component({\n    selector: 'about',\n    template: './about.template.html',\n    styles: ['./about.style.scss']\n})\n\nexport class About {\n    public contents: string[];\n    private page: string = 'about';\n\n    constructor(private langFile: Language) {\n        this.contents = langFile.getPageContent(this.page);\n    }\n}\n","module.exports = \"/*\\r\\n * App-wide Color\\r\\n */\\n/*\\r\\n * Font Sizes\\r\\n */\\n/*\\r\\n * Font Face\\r\\n */\\n.card {\\n  font-family: \\\"Open Sans\\\", Arial, Tahoma;\\n  padding-bottom: 20px; }\\n.card .card-header .icon, .card .card-header .title {\\n    color: #ec7263;\\n    font-size: 16px;\\n    font-weight: bold;\\n    padding-bottom: 15px; }\\n.card .card-body {\\n    width: 90%; }\\n.card .card-body .card-text::before {\\n      content: \\\"$ \\\"; }\\n.card .card-body .card-text::after {\\n      content: \\\"| \\\";\\n      -webkit-animation: blinker 1s linear infinite;\\n              animation: blinker 1s linear infinite; }\\n@-webkit-keyframes blinker {\\n  50% {\\n    opacity: 0; } }\\n@keyframes blinker {\\n  50% {\\n    opacity: 0; } }\\n.card .card-body .card-text {\\n      font-size: 12px;\\n      display: block; }\\n\"","module.exports = \"<div class=\\\"card border-light mb-3\\\" *ngIf=\\\"cardInfo\\\">\\r\\n    <div class=\\\"card-header\\\">\\r\\n        <span class=\\\"icon glyphicon {{cardInfo.icon}}\\\" aria-hidden=\\\"true\\\"></span>\\r\\n        <span class=\\\"title\\\">{{cardInfo.title}}</span>\\r\\n    </div>\\r\\n    <div class=\\\"card-body\\\" *ngIf=\\\"cardInfo.details\\\">\\r\\n        <h5 class=\\\"card-title\\\" *ngIf=\\\"cardInfo.details.title\\\">\\r\\n            {{cardInfo.details.title}}\\r\\n        </h5>\\r\\n        <p class=\\\"card-text\\\" *ngIf=\\\"cardInfo.details.text\\\">\\r\\n            {{cardInfo.details.text}}\\r\\n        </p>\\r\\n        <div *ngIf=\\\"cardInfo.details.contacts\\\">\\r\\n            <div *ngFor=\\\"let contact of cardInfo.details.contacts\\\">\\r\\n                    <contact-list [contactInfo]=\\\"contact\\\"></contact-list>\\r\\n            </div>\\r\\n        </div>\\r\\n    </div>\\r\\n</div>\"","import { Component, Input } from '@angular/core';\r\nimport {ContactList} from 'components/common/contact-list/contactList';\r\n\r\n@Component ({\r\n    selector: 'card',\r\n    styleUrls: ['./card.style.scss'],\r\n    templateUrl: './card.template.html'\r\n})\r\n\r\nexport class Card {\r\n    @Input() cardInfo: Object;\r\n\r\n    constructor() {}\r\n}","module.exports = \"#photo {\\n  margin: auto;\\n  margin-top: -75px;\\n  padding-top: 30px;\\n  width: 160px;\\n  height: 160px;\\n  border-radius: 50%; }\\n  #photo img {\\n    width: 150px;\\n    height: 150px;\\n    border-radius: 50%; }\\n\"","module.exports = \"<div id=\\\"photo\\\">\\r\\n    <img src=\\\"{{image}}\\\" alt=\\\"avatar\\\">\\r\\n  </div>\"","import { Component, Input } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'circle-image',\r\n  styleUrls: ['./circleImage.style.scss'],\r\n  templateUrl: './circleImage.template.html'\r\n})\r\n\r\nexport class CircleImage {\r\n  @Input() image: string;\r\n  constructor() {}\r\n}\r\n","module.exports = \"/*\\r\\n * App-wide Color\\r\\n */\\n/*\\r\\n * Font Sizes\\r\\n */\\n/*\\r\\n * Font Face\\r\\n */\\n.contact-item {\\n  font-family: \\\"Open Sans\\\", Arial, Tahoma;\\n  display: block; }\\n.contact-item > div {\\n    display: inline; }\\n.contact-item .icon {\\n    background-color: #ededed; }\\n.contact-item .title, .contact-item .titleWithUrl {\\n    padding-left: 10px; }\\n.contact-item .title::after,\\n  .contact-item .titleWithUrl::after {\\n    content: \\\"| \\\";\\n    -webkit-animation: blinker 1s linear infinite;\\n            animation: blinker 1s linear infinite; }\\n.contact-item a, .contact-item a:hover, .contact-item a:visited {\\n    color: #000; }\\n@-webkit-keyframes blinker {\\n  50% {\\n    opacity: 0; } }\\n@keyframes blinker {\\n  50% {\\n    opacity: 0; } }\\n\"","module.exports = \"<div class=\\\"contact-item\\\">\\r\\n    <div *ngIf=\\\"contactInfo.icon\\\" class=\\\"icon\\\">\\r\\n        <span class=\\\"{{contactInfo.icon}}\\\"></span>\\r\\n    </div>\\r\\n    <div *ngIf=\\\"!contactInfo.url\\\" class=\\\"title\\\">\\r\\n        {{contactInfo.name}}\\r\\n    </div>\\r\\n    <div *ngIf=\\\"contactInfo.url\\\" class=\\\"titleWithUrl\\\">\\r\\n        <a *ngIf=\\\"contactInfo.url\\\" href=\\\"{{contactInfo.url}}\\\" target=\\\"_blank\\\">\\r\\n            {{contactInfo.name}}\\r\\n        </a>\\r\\n        <span *ngIf=\\\"contactInfo.name\\\">\\r\\n            {{contactInfo.title}}\\r\\n        </span>\\r\\n    </div>\\r\\n</div>\"","import { Component, Input } from '@angular/core';\r\n\r\n@Component ({\r\n    selector: 'contact-list',\r\n    styleUrls: ['./contactList.style.scss'],\r\n    templateUrl: './contactList.template.html'\r\n})\r\n\r\nexport class ContactList {\r\n    @Input() contactInfo: Object;\r\n\r\n    constructor() {\r\n        console.log(JSON.stringify(this.contactInfo));\r\n    }\r\n}","module.exports = \"/*\\r\\n * App-wide Color\\r\\n */\\n/*\\r\\n * Font Sizes\\r\\n */\\n/*\\r\\n * Font Face\\r\\n */\\n* {\\n  color: #000; }\\n.resumeContainer {\\n  padding: 0;\\n  margin: 5px 0; }\\n.resumeContainer .row {\\n    background-color: #fff;\\n    margin: 0 80px !important; }\\n.resumeContainer .row .col {\\n      min-height: 150px;\\n      background-color: #fff;\\n      text-align: left;\\n      /* The typing effect */ }\\n.resumeContainer .row .col.col-padding {\\n        padding-left: 30px; }\\n.resumeContainer .row .col #photo-header {\\n        padding-bottom: 20px; }\\n.resumeContainer .row .col #photo-header hr {\\n          padding: 0;\\n          margin: 5px 0;\\n          border-color: #ededed; }\\n.resumeContainer .row .col #text-header {\\n        padding: 20px 0 0;\\n        white-space: nowrap;\\n        overflow: hidden;\\n        width: 100%;\\n        font-family: \\\"Open Sans\\\", Arial, Tahoma; }\\n.resumeContainer .row .col #text-header h1 {\\n          text-transform: uppercase;\\n          font-size: 2em;\\n          letter-spacing: -1px;\\n          margin-top: 5px; }\\n.resumeContainer .row .col #text-header h1 span {\\n            color: #ec7263; }\\n.resumeContainer .row .col #text-header h1 sup {\\n            opacity: 0.5; }\\n@-webkit-keyframes type {\\n  from {\\n    width: 0; } }\\n@keyframes type {\\n  from {\\n    width: 0; } }\\n\"","module.exports = \"<div class=\\\"resumeContainer\\\" *ngIf=\\\"contents\\\">\\r\\n    <div class=\\\"row rowFirst\\\">\\r\\n      <div class=\\\"col col-xs-10 col-lg-offset-1\\\">\\r\\n        <div id=\\\"photo-header\\\" class=\\\"text-center\\\">\\r\\n          <!-- PHOTO (AVATAR) -->\\r\\n          <circle-image image=\\\"assets/img/avatar.jpg\\\"></circle-image>\\r\\n          <div id=\\\"text-header\\\">\\r\\n            <h1 [innerHTML]=\\\"greetings[0].content\\\"></h1>\\r\\n          </div>\\r\\n          <hr />\\r\\n          <hr />\\r\\n        </div>\\r\\n      </div>\\r\\n    </div>\\r\\n  <div class=\\\"row\\\">\\r\\n    <div *ngFor=\\\"let section of contents; let i = index;\\\" \\r\\n      class=\\\"col {{section.section}}\\\" \\r\\n      [ngClass]=\\\"{'col-lg-8 col-padding': i%2==0, 'col-lg-4': i%2!=0}\\\">\\r\\n        <card [cardInfo]=\\\"section\\\"></card>\\r\\n    </div>\\r\\n  </div>\\r\\n</div>\"","import {Component} from '@angular/core';\r\nimport {Language} from 'services/language/language.service';\r\nimport {CircleImage} from 'components/common/circle-image/circleImage';\r\nimport {Card} from 'components/common/card/card';\r\n\r\n@Component({\r\n  selector: 'home',\r\n  styleUrls: ['./home.style.scss'],\r\n  templateUrl: './home.template.html'\r\n})\r\n\r\nexport class Home {\r\n  public contents: string[];\r\n  public greetings: string[];\r\n  private header: string = 'greetings';\r\n  private page: string = 'resume';\r\n\r\n  constructor(private langFile: Language) {\r\n    this.greetings = langFile.getSectionContent(this.header);\r\n    this.contents = this.sortingOfContents(\r\n      langFile.getPageContent(this.page)\r\n    );\r\n  }\r\n\r\n  private sortingOfContents(contents) {\r\n    if (contents.length > 0) {\r\n      contents.sort((a, b) => {\r\n        if (a.sort < b.sort) {\r\n          return -1;\r\n        } else if (a.sort > b.sort) {\r\n          return 1;\r\n        } else {\r\n          return 0;\r\n        }\r\n      });\r\n    }\r\n\r\n    return contents;\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\n\r\n@Injectable()\r\nexport class Config {\r\n  private apiCollectionUrl: string = \"https://jjbxaqu2hd.execute-api.ap-southeast-1.amazonaws.com/dev/getAllConfigs\";\r\n\r\n  constructor() {}\r\n\r\n  public getApiUrl() {\r\n    return this.apiCollectionUrl;\r\n  }\r\n}","import { Injectable } from '@angular/core';\r\nimport { Http, Response } from '@angular/http';\r\nimport { Location } from '@angular/common';\r\nimport { Config } from 'config/config';\r\n\r\n@Injectable()\r\nexport class Configuration {\r\n  title: string = 'Environmental configurations';\r\n  env: string = 'prod';\r\n  content: string = '1';\r\n\r\n   constructor(\r\n     private http: Http,\r\n     private location: Location,\r\n     private config: Config\r\n    ) {\r\n    this.env = this.getEnv();\r\n   }\r\n\r\n  getConfig(): Promise<any> {\r\n    let $host = this.getHost();\r\n\r\n    return this.http.get($host)\r\n      .toPromise()\r\n      .then(this.extractData)\r\n      .catch(this.handleErrorPromise);\r\n  }\r\n\r\n  private getHost() {\r\n    return this.config.getApiUrl();\r\n  }\r\n\r\n  private getEnv() {\r\n    let env = 'prod';\r\n    if (window.location.host.indexOf('localhost') > -1) {\r\n      env = 'dev';\r\n    } else if (window.location.host.indexOf('stage') > -1) {\r\n      env = 'stage';\r\n    }\r\n\r\n    return env;\r\n  }\r\n\r\n  private extractData(res: Response) {\r\n    let body = res.json();\r\n    return body || {};\r\n  }\r\n\r\n  private handleErrorPromise (error: Response | any) {\r\n    console.log(error);\r\n    return Promise.reject(error.message || error);\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { Http, Response } from '@angular/http';\r\n\r\n@Injectable()\r\nexport class Language {\r\n  public lang: any;\r\n  public configType: string = 'CONTENT_API';\r\n\r\n  constructor(private http: Http) {}\r\n\r\n  public getPageContent(page) {\r\n    let arrContents = [];\r\n    let content = this.lang.contents || [];\r\n    console.log(this.lang);\r\n    if ( content.length > 0) {\r\n      arrContents = content.filter(\r\n        x => x.page === page\r\n      );\r\n    }\r\n\r\n    return arrContents;\r\n  }\r\n\r\n  public getSectionContent(section) {\r\n    let arrContents = [];\r\n    let content = this.lang.contents || [];\r\n    console.log(this.lang);\r\n    if ( content.length > 0) {\r\n      arrContents = content.filter(\r\n        x => x.section === section\r\n      );\r\n    }\r\n\r\n    return arrContents;\r\n  }\r\n\r\n  public geti18nFile(config): Promise<any> {\r\n    let langConfig = config.find(conf => conf.code === this.configType);\r\n    return this.http.get(langConfig.configUrl + langConfig.configPath)\r\n      .toPromise()\r\n      .then(response => {\r\n        this.lang = this.extractData(response);\r\n        return this.lang;\r\n      })\r\n      .catch(this.handleErrorPromise);\r\n  }\r\n\r\n  private extractData(res: Response) {\r\n    let body = res.json();\r\n\r\n    return body;\r\n  }\r\n\r\n  private handleErrorPromise (error: Response | any): Promise<any> {\r\n\t  console.error(error.message || error);\r\n    return Promise.reject(error.message || error);\r\n  }\r\n}\r\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build ---prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * In development mode, to ignore zone related error stack frames such as\n * `zone.run`, `zoneDelegate.invokeTask` for easier debugging, you can\n * import the following file, but please comment it out in production mode\n * because it will have performance impact when throw error\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.log(err));\n"],"sourceRoot":""}